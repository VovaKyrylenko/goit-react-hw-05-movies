{"version":3,"file":"static/js/544.01fbaed1.chunk.js","mappings":"mKA0BA,IAtBkB,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAC9B,OACE,SAAC,KAAD,UACGF,EAAKG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKL,GAAL,OAAWG,GAAMG,MAAO,CAAEC,KAAMN,GAAxC,SACGG,KAFMD,EAMd,KAGN,C,mIC+BD,UA1Ca,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMb,GAAWc,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,+GAE8BC,EAAAA,KAF9B,oBAEYC,EAFZ,EAEYA,SACKC,OAHjB,uBAIMC,QAAQC,IAAI,kCAJlB,0BAOIX,GAAU,OAAIQ,IACdN,EAAU,YARd,kDAUIE,EAAS,KAAMQ,SACfV,EAAU,YAXd,2DAHc,sBACdA,EAAU,WADI,mCAiBdW,EACD,GAAE,KAGD,gCACc,aAAXZ,IAAyB,wBAAKE,KAC/B,SAAC,KAAD,8BACA,SAAC,IAAD,CAAWd,KAAMU,EAAQT,IAAI,UAAUC,SAAUA,MAGtD,C,kICvCYuB,EAAQC,EAAAA,GAAAA,EAAH,gHAOLC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAAOF,EAAAA,GAAAA,GAAH,kE,+LCZXG,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,sGACCD,EAAAA,EAAAA,IAAA,8BAAiCH,IADlC,uBACd7B,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRkC,EAAY,mCAAG,WAAM9B,GAAN,yFACH4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,YAA0ByB,IADvB,uBAClB7B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZmC,EAAW,mCAAG,WAAM/B,GAAN,yFACF4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,oBAAkCyB,IADhC,uBACjB7B,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXoC,EAAa,mCAAG,WAAMhC,GAAN,yFACJ4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,oBAAkCyB,IAD9B,uBACnB7B,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbqC,EAAgB,mCAAG,WAAMC,GAAN,yFACPN,EAAAA,EAAAA,IAAA,wBACJH,EADI,4DAC4DS,IAFrD,uBACtBtC,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js","service/apiMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { List, Item } from 'pages/Home/Home.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ data, url, location }) => {\n  return (\n    <List>\n      {data.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <Link to={`${url}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n  url: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as apiMovie from 'service/apiMovies';\nimport { Title } from 'pages/Home/Home.styled';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n\n    async function getMovies() {\n      try {\n        const { results } = await apiMovie.getMovie();\n        if (!results.length) {\n          console.log('Oooh oh, there are no results.');\n          return;\n        }\n        setMovies([...results]);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      {status === 'rejected' && <h3>{error}</h3>}\n      <Title>Trending today</Title>\n      <MovieList data={movies} url=\"movies/\" location={location} />\n    </>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.array,\n  error: PropTypes.any,\n  status: PropTypes.string,\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  margin-bottom: 10px;\n  margin-left: 15px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  margin-left: 15px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'f36ca5f08fabb02f79441db3f5d1a857',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};\n"],"names":["data","url","location","map","id","title","to","state","from","useState","movies","setMovies","status","setStatus","error","setError","useLocation","useEffect","apiMovie","results","length","console","log","message","getMovies","Title","styled","List","Item","searchParams","URLSearchParams","api_key","axios","getMovie","getMovieById","getCastById","getRewiesById","getMoviesByQuery","query"],"sourceRoot":""}