{"version":3,"file":"static/js/310.37625682.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","service/apiMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { List, Item } from 'pages/Home/Home.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ data, url, location }) => {\n  return (\n    <List>\n      {data.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <Link to={`${url}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n  url: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  margin-bottom: 10px;\n  margin-left: 15px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  margin-left: 15px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 15px;\n  width: 250px;\n  border: 1px solid #ccc;\n  &:hover,\n  :focus {\n    outline: 0;\n    border-color: transparent;\n    box-shadow: 0 0 3px #00bfff;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #ccc;\n`;\n\nexport const List = styled.ul`\n  margin-left: 15px;\n  list-style: circle;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as apiMovies from 'service/apiMovies';\nimport { Form, Input, Button } from './Movies.styled';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [titles, setTitles] = useState([]);\n  const [status, setStatus] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    setStatus('pending');\n\n    async function getMovies() {\n      try {\n        const { results } = await apiMovies.getMoviesByQuery(query);\n\n        setTitles([...results]);\n        if (results.length > 0) {\n          setStatus('resolved');\n          return;\n        }\n        setStatus('empty');\n      } catch (error) {\n        console.log(error.message);\n        setStatus('rejected');\n      }\n    }\n    getMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n    setTitles([]);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {status === 'empty' && <p>No matches for your query..</p>}\n      {titles && <MovieList data={titles} url=\"\" location={location} />}\n    </>\n  );\n};\n\nMovies.propTypes = {\n  titles: PropTypes.array,\n  error: PropTypes.any,\n  status: PropTypes.string,\n  searchParams: PropTypes.object,\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'f36ca5f08fabb02f79441db3f5d1a857',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};\n"],"names":["data","url","location","map","id","title","to","state","from","Title","styled","List","Item","Form","Input","Button","useState","titles","setTitles","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","apiMovies","results","length","console","log","message","getMovies","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","MovieList","URLSearchParams","api_key","axios","getMovie","getMovieById","getCastById","getRewiesById","getMoviesByQuery"],"sourceRoot":""}